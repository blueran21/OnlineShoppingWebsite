package com.codebase.itemservice.model;

import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;

import java.util.ArrayList;
import java.util.List;

/**
 * Represents a product in the system. Items are stored in MongoDB due to
 * their flexible schema; new attributes can be added without schema
 * migrations. An item stores descriptive metadata as well as the
 * universal product code (UPC) and a base price. The item id is
 * generated by MongoDB.
 */
@Document(collection = "items")
public class Item {

    @Id
    private String id;

    @NotBlank
    private String name;

    private String description;

    /**
     * A list of URLs pointing to pictures of the item. Empty by default.
     */
    private List<String> pictureUrls = new ArrayList<>();

    /**
     * Universal product code.
     */
    @NotBlank(message = "UPC is required")
    @Indexed(unique = true)
    private String upc;

    @NotNull
    private Double price;

    public Item() {
    }

    public Item(String name, String description, List<String> pictureUrls, String upc, Double price) {
        this.name = name;
        this.description = description;
        if (pictureUrls != null) {
            this.pictureUrls = pictureUrls;
        }
        this.upc = upc;
        this.price = price;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public List<String> getPictureUrls() {
        return pictureUrls;
    }

    public void setPictureUrls(List<String> pictureUrls) {
        this.pictureUrls = pictureUrls;
    }

    public String getUpc() {
        return upc;
    }

    public void setUpc(String upc) {
        this.upc = upc;
    }

    public Double getPrice() {
        return price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }
}
